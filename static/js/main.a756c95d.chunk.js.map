{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["cellClassRules","params","value","genderComponent","props","genderEditor","state","afterGuiAttached","refs","input","focus","getValue","destroy","defaultValue","this","undefined","style","height","width","onChange","event","setState","target","ref","placeholder","showAction","map","item","id","Component","countryComponent","countryEditor","cityComponent","cityEditor","rowData","columnDefs","headerName","checkboxSelection","headerCheckboxSelection","webkitConvertPointFromNodeToPage","field","editable","sortable","sortingOrder","cellRenderer","cellEditor","cellEditorParams","message","App","data","useState","gridApi","setGridApi","setColumnApi","minHeight","display","justifyContent","className","onClick","applyTransaction","add","_","selectedRows","getSelectedRows","remove","onGridReady","api","columnApi","sizeColumnsToFit","frameworkComponents","singleClickEdit","enableSorting","stopEditingWhenCellsLoseFocus","rowSelection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAWMA,EAAiB,CACrB,aAAc,SAAAC,GAAM,MAAoB,KAAhBA,EAAOC,QAG3BC,EAAiB,SAAAC,GACrB,IAAQF,EAAQE,EAARF,MACR,OACE,8BACEA,KAKAG,E,4MACJC,MAAM,CAAEJ,MAAM,EAAKE,MAAMF,O,EACzBK,iBAAiB,kBAAK,EAAKC,KAAKC,MAAMC,S,EACtCC,SAAS,kBAAI,EAAKL,MAAMJ,O,EACxBU,QAAQ,a,4CAER,WAAS,IAAD,OAEN,OACE,wBACAC,aAAcC,KAAKR,MAAMJ,YAASa,EAClCC,MAAO,CAAEC,OAAO,OAAOC,MAAM,QAC7BC,SAAU,SAAAC,GAAK,OAAE,EAAKC,SAAS,CAACnB,MAAMkB,EAAME,OAAOpB,SACnDqB,IAAI,QACJC,YAAW,iBAAY,UACvBC,WAAY,CAAC,SANb,SAFY,CAAC,OAAO,UAUTC,KAAI,SAACC,GAAD,OACX,wBAAQX,MAAO,CAAEC,OAAO,OAAOC,MAAM,QAAoBU,GAAID,EAAMzB,MAAOyB,EAA1E,SACCA,GADkDA,Y,GAlBlCE,aA2BrBC,EAAkB,SAAA1B,GACtB,IAAQF,EAAQE,EAARF,MACR,OACE,8BACEA,KAKA6B,E,4MACJzB,MAAM,CAAEJ,MAAM,EAAKE,MAAMF,O,EACzBK,iBAAiB,kBAAK,EAAKC,KAAKC,MAAMC,S,EACtCC,SAAS,kBAAI,EAAKL,MAAMJ,O,EACxBU,QAAQ,a,4CAER,WAAS,IAAD,OAEN,OACE,wBACAC,aAAcC,KAAKR,MAAMJ,YAASa,EAClCC,MAAO,CAAEC,OAAO,OAAOC,MAAM,QAC7BC,SAAU,SAAAC,GAAK,OAAE,EAAKC,SAAS,CAACnB,MAAMkB,EAAME,OAAOpB,SACnDqB,IAAI,QACJC,YAAW,iBAAY,WACvBC,WAAY,CAAC,SANb,SAFY,CAAC,UAAU,QAAQ,MAAM,UAU1BC,KAAI,SAACC,GAAD,OACX,wBAAQX,MAAO,CAAEC,OAAO,OAAOC,MAAM,QAAoBU,GAAID,EAAMzB,MAAOyB,EAA1E,SACCA,GADkDA,Y,GAlBjCE,aA4BtBG,EAAe,SAAA5B,GACnB,IAAQF,EAAQE,EAARF,MACR,OACE,8BACEA,KAKA+B,E,4MACJ3B,MAAM,CAAEJ,MAAM,EAAKE,MAAMF,O,EACzBK,iBAAiB,kBAAK,EAAKC,KAAKC,MAAMC,S,EACtCC,SAAS,kBAAI,EAAKL,MAAMJ,O,EACxBU,QAAQ,a,4CAER,WAAS,IAAD,OAEN,OACE,wBACAC,aAAcC,KAAKR,MAAMJ,YAASa,EAClCC,MAAO,CAAEC,OAAO,OAAOC,MAAM,QAC7BC,SAAU,SAAAC,GAAK,OAAE,EAAKC,SAAS,CAACnB,MAAMkB,EAAME,OAAOpB,SACnDqB,IAAI,QACJC,YAAW,iBAAY,QACvBC,WAAY,CAAC,SANb,SAFY,CAAC,WAAW,aAAa,YAAY,UAUtCC,KAAI,SAACC,GAAD,OACX,wBAAQX,MAAO,CAAEC,OAAO,OAAOC,MAAM,QAAoBU,GAAID,EAAMzB,MAAOyB,EAA1E,SACCA,GADkDA,Y,GAlBpCE,aA2BnBK,EAAU,CACd,CAAC,GAAK,EAAE,KAAO,OAAO,MAAQ,iBAAiB,OAAS,OAAO,IAAM,aAAa,QAAU,QAAQ,KAAO,SAC3G,CAAC,GAAK,EAAE,KAAO,OAAO,MAAQ,iBAAiB,OAAS,OAAO,IAAM,aAAa,QAAU,QAAQ,KAAO,SAC3G,CAAC,GAAK,EAAE,KAAO,OAAO,MAAQ,iBAAiB,OAAS,OAAO,IAAM,aAAa,QAAU,QAAQ,KAAO,UAItGC,EAAW,CACf,CACEC,WAAW,GACZC,mBAAkB,EAClBC,yBAAwB,EACxBC,iCAAiC,OACjCrB,MAAM,GACNsB,MAAM,eAEP,CACEJ,WAAW,KACbI,MAAM,KACNtB,MAAM,IACNuB,UAAS,EACTzC,eAAgBA,GAEhB,CACEoC,WAAW,OACXI,MAAM,OACNtB,MAAM,IAAIwB,UAAS,EACnBC,aAAa,CAAC,QACdF,UAAS,EACTzC,eAAgBA,GAElB,CACEoC,WAAW,QACXI,MAAM,QACNtB,MAAM,IACNuB,UAAS,EACTzC,eAAgBA,GAGlB,CACEoC,WAAW,SACXI,MAAM,SACNtB,MAAM,IACPuB,UAAS,EACTzC,eAAgBA,EAChB4C,aAAa,kBACbC,WAAW,eACXC,iBAAiB,CACjBC,QAAQ,+BAGT,CACEX,WAAW,MACXI,MAAM,MACNtB,MAAM,IACNuB,UAAS,EACTzC,eAAgBA,GAElB,CACEoC,WAAW,UACXI,MAAM,UACNtB,MAAM,IACNuB,UAAS,EACTG,aAAa,mBACbC,WAAW,gBACX7C,eAAgBA,GAElB,CACEoC,WAAW,OACXI,MAAM,OACNtB,MAAM,IACNuB,UAAS,EACTG,aAAa,gBACbC,WAAW,aACX7C,eAAgBA,IAyDNgD,EAnDH,SAACC,GAEX,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiCF,mBAAS,MAA1C,mBAAkBG,GAAlB,WAOC,OACE,qBAAKrC,MAAQ,CAAEsC,UAAU,QAAQC,QAAQ,OAAOC,eAAe,UAA/D,SAGE,sBAAKC,UAAU,kBAAkBzC,MAAO,CAACC,OAAQ,IAAKC,MAAO,KAA7D,UACG,wBAAQuC,UAAU,MAClBC,QAAS,kBAAIP,EAAQQ,iBAAiB,CAAEC,IAAI,CAAC,OAD7C,uBAIA,wBAAQH,UAAU,MAClBC,QAAS,SAAAG,GACP,IAAMC,EAAeX,EAAQY,kBAC7BZ,EAAQQ,iBAAiB,CAAEK,OAASF,KAHtC,kCAQA,wBAAQL,UAAU,MAClBC,QAAS,SAAAG,KADT,oBAQC,cAAC,cAAD,CACG7D,eAAgBA,EACdkC,QAASA,EACVC,WAAYA,EACZ8B,YAlCS,SAAAhE,GACpBmD,EAAWnD,EAAOiE,KAClBb,EAAapD,EAAOkE,WACpBlE,EAAOiE,IAAIE,oBAgCAC,oBAAqB,CAAElE,kBAAiBE,eAAayB,mBAAiBC,gBAAcC,gBAAcC,cAClGqC,iBAAe,EACfC,eAAa,EACbC,+BAA6B,EAC7BC,aAAa,mBC5ObC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a756c95d.chunk.js","sourcesContent":["\nimport React,{ Component, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport \"ag-grid-community\";\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { GridApi } from 'ag-grid-community';\n\nconst cellClassRules = {\n  \"cell-empty\": params => params.value ==='',\n}\n\nconst genderComponent =props=>{\n  const { value }=props;\n  return(\n    <div>\n     {value}\n    </div>\n  );\n};\n\nclass genderEditor extends Component{\n  state={ value:this.props.value};\n  afterGuiAttached=()=> this.refs.input.focus();\n  getValue=()=>this.state.value;\n  destroy=()=>{ };\n\n  render(){\n    const options=['Male','Female'];\n    return(\n      <select\n      defaultValue={this.state.value || undefined}\n      style={{ height:'100%',width:'100%'}}\n      onChange={event=>this.setState({value:event.target.value})}\n      ref=\"input\"\n      placeholder={`Select ${'Gender'|| 'Option'}`}\n      showAction={['focus']}\n      >\n        {options.map((item)=>(\n          <option style={{ height:'100%',width:'100%'}} key={item} id={item} value={item}>\n          {item}\n          </option>\n        ))}\n      </select>\n    )\n  };\n};\n\nconst countryComponent =props=>{\n  const { value }=props;\n  return(\n    <div>\n     {value}\n    </div>\n  );\n};\n\nclass countryEditor extends Component{\n  state={ value:this.props.value};\n  afterGuiAttached=()=> this.refs.input.focus();\n  getValue=()=>this.state.value;\n  destroy=()=>{ };\n\n  render(){\n    const options=['Ukraine','India','USA','Russia'];\n    return(\n      <select\n      defaultValue={this.state.value || undefined}\n      style={{ height:'100%',width:'100%'}}\n      onChange={event=>this.setState({value:event.target.value})}\n      ref=\"input\"\n      placeholder={`Select ${'Country'|| 'Option'}`}\n      showAction={['focus']}\n      >\n        {options.map((item)=>(\n          <option style={{ height:'100%',width:'100%'}} key={item} id={item} value={item}>\n          {item}\n          </option>\n        ))}\n      </select>\n    )\n  };\n};\n\n\nconst cityComponent =props=>{\n  const { value }=props;\n  return(\n    <div>\n     {value}\n    </div>\n  );\n};\n\nclass cityEditor extends Component{\n  state={ value:this.props.value};\n  afterGuiAttached=()=> this.refs.input.focus();\n  getValue=()=>this.state.value;\n  destroy=()=>{ };\n\n  render(){\n    const options=['New York','washington','Bangalore','Moscow'];\n    return(\n      <select\n      defaultValue={this.state.value || undefined}\n      style={{ height:'100%',width:'100%'}}\n      onChange={event=>this.setState({value:event.target.value})}\n      ref=\"input\"\n      placeholder={`Select ${'City'|| 'Option'}`}\n      showAction={['focus']}\n      >\n        {options.map((item)=>(\n          <option style={{ height:'100%',width:'100%'}} key={item} id={item} value={item}>\n          {item}\n          </option>\n        ))}\n      </select>\n    )\n  };\n};\n\nconst rowData = [\n  {\"Id\":1,\"Name\":\"John\",\"Email\":\"john@gmail.com\",\"Gender\":\"Male\",\"DOB\":\"03-05-1998\",\"Country\":\"India\",\"City\":\"kolar\"},\n  {\"Id\":2,\"Name\":\"aohn\",\"Email\":\"john@gmail.com\",\"Gender\":\"Male\",\"DOB\":\"03-05-1998\",\"Country\":\"India\",\"City\":\"kolar\"},\n  {\"Id\":3,\"Name\":\"pohn\",\"Email\":\"john@gmail.com\",\"Gender\":\"Male\",\"DOB\":\"03-05-1998\",\"Country\":\"India\",\"City\":\"kolar\"},\n   ];\n\n\n const columnDefs=[\n   {\n     headerName:'',\n    checkboxSelection:true,\n    headerCheckboxSelection:true,\n    webkitConvertPointFromNodeToPage:'left',\n    width:50,\n    field:'checkboxBtn',\n},\n   {\n     headerName:\"Id\",\n   field:\"Id\",\n   width:140,\n   editable:true,\n   cellClassRules: cellClassRules,\n  },\n   {\n     headerName:\"Name\",\n     field:\"Name\",\n     width:140,sortable:true,\n     sortingOrder:[\"desc\"],\n     editable:true,\n     cellClassRules: cellClassRules,\n    },\n   {\n     headerName:\"Email\",\n     field:\"Email\",\n     width:200,\n     editable:true,\n     cellClassRules: cellClassRules,\n    //  cellStyle:(params)=>(params.value.length<2?{ backgroundColor:\"yellow\"}:{backgroundColor:\"White\"})\n    },\n   {\n     headerName:\"Gender\",\n     field:\"Gender\",\n     width:140,\n    editable:true,\n    cellClassRules: cellClassRules,\n    cellRenderer:'genderComponent',\n    cellEditor:'genderEditor',\n    cellEditorParams:{\n    message:'This is custom cell editor'\n  },\n},\n   {\n     headerName:\"DOB\",\n     field:\"DOB\",\n     width:140,\n     editable:true,\n     cellClassRules: cellClassRules,\n    },\n   {\n     headerName:\"Country\",\n     field:\"Country\",\n     width:140,\n     editable:true,\n     cellRenderer:'countryComponent',\n     cellEditor:'countryEditor',\n     cellClassRules: cellClassRules,\n   },\n   {\n     headerName:\"City\",\n     field:\"City\",\n     width:140,\n     editable:true,\n     cellRenderer:'cityComponent',\n     cellEditor:'cityEditor',\n     cellClassRules: cellClassRules,\n    },\n ]\n\n \n\nconst App = (data) => {\n\n  const [gridApi, setGridApi]=useState(null);\n  const [columnApi, setColumnApi] =useState(null);\n  \n  const handleGridReady=params=>{\n    setGridApi(params.api);\n    setColumnApi(params.columnApi);\n    params.api.sizeColumnsToFit()\n  }\n   return (\n     <div style ={{ minHeight:'100vh',display:'flex',justifyContent:'center'}}>\n\n     \n       <div className=\"ag-theme-alpine\" style={{height: 300, width: 1000}}>\n          <button className=\"btn\"\n          onClick={()=>gridApi.applyTransaction({ add:[{ }]})}>\n          Add a row\n          </button>\n          <button className=\"btn\"\n          onClick={_=> {\n            const selectedRows = gridApi.getSelectedRows()\n            gridApi.applyTransaction({ remove : selectedRows})\n          }}\n          >\n          Delete selected Rows\n          </button>\n          <button className=\"btn\"\n          onClick={_=> { \n        \n           }}\n          >\n          Submit\n          </button>\n\n           <AgGridReact \n              cellClassRules={cellClassRules}\n                rowData={rowData}\n               columnDefs={columnDefs}\n               onGridReady={handleGridReady}\n               frameworkComponents={{ genderComponent, genderEditor,countryComponent,countryEditor,cityComponent,cityEditor }}\n               singleClickEdit\n               enableSorting\n               stopEditingWhenCellsLoseFocus\n               rowSelection='multiple'\n           />\n       </div>\n       </div>\n   );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}